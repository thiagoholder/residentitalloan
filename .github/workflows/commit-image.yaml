name: 'Build .Net APp'

on:
  push:
    branches: [ main ]

env:
  CAMINHO_PROJETO_WEBAPP: ./src
  CAMINHO_TESTES: ./tests/unit-tests/LoanApiUnitTests
  IMAGE_DOCKER_AZURE: ${{ secrets.REGISTRY_LOGIN_SERVER }}/residentloan
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Build application
        working-directory: ${{ env.CAMINHO_PROJETO_WEBAPP }}
        run: dotnet build --configuration Release
  test:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Run tests
        working-directory: ${{ env.CAMINHO_TESTES }}
        run:  dotnet test --verbosity normal --logger 'trx;LogFileName=TestResult.trx' --results-directory ./TestResult
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: ${{ env.CAMINHO_TESTES }}/TestResult/*.trx
  deploy_container:
      runs-on: ubuntu-latest
      needs: test
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: 'Login via Azure CLI'
          uses: docker/setup-buildx-action@v1
        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - run: |
            cd ${{ env.CAMINHO_PROJETO_WEBAPP }}
            docker build . -f Dockerfile -t ${{ env.IMAGE_DOCKER_AZURE }}:latest
        - name: Geração de tag com número do Build e Push no Docker Azure Container
          run: |
            docker tag ${{ env.IMAGE_DOCKERHUB }}:latest ${{ env.IMAGE_DOCKERHUB }}:$GITHUB_RUN_NUMBER
            docker push --all-tags ${{ env.IMAGE_DOCKERHUB }}

